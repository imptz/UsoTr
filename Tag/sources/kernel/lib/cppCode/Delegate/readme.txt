CallObject управляет вызовом нестатических функций членов класса.

Не решены два вопроса:

1. Тип Variant пока оставлен простой с дин кастом, позже переделается в нормальный.
2. Невозможно использовать функции принимающие параметры по ссылке.

Макрос ICALLOBJECT_VARIANT_RESULT управляет хранением результата вызова в типе Variant, если макрос определен или в родном типе результата, если макрос не определен. Во втором случае требуется явное приведение типа значения, возвращаемого getResult().

Максимальное число параметров вызываемых функций - 10;

Пример использования:

class A
{
	int func(int value)
	{
		return value;
	}
};


A a,a1;

// создается объект вызова
ICallObject* cObj = createCallObject(&A::func, &a, 10);
// вызывается функция
cObj->call();

#ifdef ICALLOBJECT_VARIANT_RESULT
// получение результата при компиляции с использованием Варианта
	cres = cObj->getResult();
#else
// получение результата при компиляции без использования Варианта
	cres = *(static_cast<int>(cObj->getResult()));
#endif

// смена объекта, содержащего вызываемую функцию
cObj->setReceiver(&a1);
cObj->call();

// получение копии объекта вызова
ICallObject* cObjClone = cObj->clone();
cObjClone->call();
